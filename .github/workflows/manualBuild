name: Build Jar Manually

on:
  workflow_dispatch:  # Allows manual trigger from the GitHub UI

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout repository
      uses: actions/checkout@v3

    # Step 2: Set up Java 17 (or your target version)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin' # or 'zulu', 'adopt', etc.

    # Step 3: Get the current version from the pom.xml
    - name: Get current version from pom.xml
      id: get_version
      run: |
        VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Current version is: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    # Step 4: Increment the version (patch version bump)
    - name: Increment version
      id: increment_version
      run: |
        VERSION=$(echo ${{ env.VERSION }} | awk -F. '{$NF+=1; OFS="."; print}')
        echo "New version is: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        # Update the version in the pom.xml
        mvn versions:set -DnewVersion=$VERSION
        # Check that the new version has been updated
        grep -q "<version>$VERSION</version>" pom.xml && echo "Version updated in pom.xml"

    # Step 5: Build the .jar file
    - name: Build jar file
      run: mvn clean package

    # Step 6: Upload the built .jar file as an artifact
    - name: Upload .jar artifact
      uses: actions/upload-artifact@v3
      with:
        name: built-jar
        path: target/*.jar

    # Step 7: Commit the updated pom.xml with the new version
    - name: Commit new version
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add pom.xml
        git commit -m "Bump version to ${{ env.VERSION }}"
        git push

    # Step 8: Create a tag with the new version and push it to the repository
    - name: Create Git Tag
      run: |
        git tag -a "v${{ env.VERSION }}" -m "Release v${{ env.VERSION }}"
        git push origin "v${{ env.VERSION }}"
